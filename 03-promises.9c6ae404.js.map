{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SAEpCF,EAAKG,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAMC,iBAEN,MAAMC,EAAeF,EAAMG,cAAcC,SACnCC,EAAOC,OAAOJ,EAAaG,KAAKE,OAEtC,IAAIC,EAAUF,OAAOJ,EAAaO,OAAOF,OACrCG,EAAQJ,OAAOJ,EAAaS,MAAMJ,OAClCK,EAAW,EAEf,MAAMC,EAAaC,aAAY,KAC7B,GAAIN,GAAW,EACb,OAAOO,cAAcF,IAqB3B,SAAuBG,EAAUL,GAC/B,MAAMM,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEL,E,MAAUL,IAEpBW,EAAO,C,SAAEN,E,MAAUL,MAEpBA,OA5BHa,CAAcZ,EAAUF,GACrBe,MAAK,EAACT,SAAEA,EAAQL,MAAEA,MACjBe,QAAQC,IAAI,uBAAqBX,QAAiBL,OAClDjB,EAAAkC,OAAOC,QAAQ,uBAAqBb,QAAiBL,UAEtDmB,OAAM,EAACd,SAAEA,EAAQL,MAAEA,MAClBe,QAAQC,IAAI,sBAAoBX,QAAiBL,OACjDjB,EAAAkC,OAAOG,QAAQ,sBAAoBf,QAAeL,UAGtDC,GAAY,EACZJ,GAAW,EACXE,GAASL,IACR,GAEHT,EAAKoC","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', onSubmitForm);\n\nfunction onSubmitForm(event) {\n  event.preventDefault();\n\n  const formElements = event.currentTarget.elements;\n  const step = Number(formElements.step.value);\n\n  let counter = Number(formElements.amount.value);\n  let delay = Number(formElements.delay.value);\n  let position = 1;\n\n  const intervalId = setInterval(() => {\n    if (counter <= 0) {\n      return clearInterval(intervalId);\n    }\n\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n\n    position += 1;\n    counter -= 1;\n    delay += step;\n  }, 0);\n\n  form.reset();\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","addEventListener","event","preventDefault","formElements","currentTarget","elements","step","Number","value","counter","amount","delay1","delay","position1","intervalId","setInterval","clearInterval","position","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","$47d4ff9957288465$var$createPromise","then","console","log","Notify","success","catch","failure","reset"],"version":3,"file":"03-promises.9c6ae404.js.map"}